name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  frontend-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Get frontend dependencies
        run: yarn --cwd frontend/ install
      - name: Build frontend
        run: yarn --cwd frontend/ build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: |
            frontend/dist

  backend-binary-release:
    runs-on: ubuntu-latest
    needs: frontend-release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.19
      - name: Download a frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: frontend/dist
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  backend-docker-release:
    runs-on: ubuntu-latest
    needs: frontend-release
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v4
        with:
          images: jangraefen/git-pipeline-dashboard
          tag-sha: true
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub docker registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Download a frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend
          path: frontend/dist
      - name: Build docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: |
            linux/amd64
            linux/arm64/v8
            linux/arm/v7
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: true
